apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "$NAMESPACE-argo"
  namespace: "$NAMESPACE"
rules:
- apiGroups:
  - ""
  resources:
  - services
  - pods
  - pods/exec
  - endpoints
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - "k8s.cni.cncf.io"
  resources:
  - network-attachment-definitions
  verbs:
  - create
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - 5g.ibm.com
  resources:
  - mongoes
  - ausfs
  - nrves
  - smfs
  - udms
  - udrs
  - amfs
  - nssfs
  - pcfs
  - webconsoles
  - upfs
  - transitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - 5g.ibm.com
  resources:
  - mongoes/status
  - ausfs/status
  - nrves/status
  - smfs/status
  - udms/status
  - udrs/status
  - amfs/status
  - nssfs/status
  - pcfs/status
  - webconsoles/status
  - transitions/status
  - upfs/status
  verbs:
  - get
- apiGroups:
  - apps.open-cluster-management.io
  resources:
  - subscriptions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch  
- apiGroups:
  - apps.open-cluster-management.io
  resources:
  - subscriptions/status
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - delete
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "$NAMESPACE-argo"
  namespace: "$NAMESPACE"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "$NAMESPACE-argo"
subjects:
- kind: ServiceAccount
  name: default
  namespace: "$NAMESPACE"
- kind: Group
  name: system:serviceaccounts:default
  apiGroup: rbac.authorization.k8s.io
  namespace: "$NAMESPACE"
